{"version":3,"sources":["Components/Contacts/Contacts.jsx","Components/Filter/Filter.jsx","Components/Form/Form.jsx","Components/Section/Section.jsx","Components/App.js","index.js"],"names":["Contacts","options","onDelete","map","option","lendth","name","number","id","type","onClick","Filter","value","onChange","Form","state","reset","setState","handleChange","e","target","onFormSubmit","preventDefault","newContact","nanoid","props","isNameExist","alert","onSubmit","this","pattern","title","required","Component","Section","children","App","contacts","filter","formHandler","data","prev","onChangeFilter","currentTarget","formState","some","contact","toLowerCase","newFilter","includes","length","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.83e27959.chunk.js","sourcesContent":["import React from 'react'\r\nimport PropTypes from 'prop-types'\r\n\r\nconst Contacts = ({options, onDelete }) => {\r\n  return (\r\n    <ul>\r\n      {options.map((option) => {\r\n        return (\r\n          options.lendth !== 0 && (\r\n            <li key={option.id}>\r\n              {option.name}:{option.number}\r\n              <button name={option.id} type=\"button\" onClick={onDelete}>\r\n                Delete\r\n              </button>\r\n            </li>\r\n          )\r\n        );\r\n      })}\r\n    </ul>\r\n  )\r\n}\r\n\r\nContacts.propTypes = {\r\n  options: PropTypes.arrayOf(PropTypes.object),\r\n  onDelete: PropTypes.func,\r\n};\r\n\r\nexport default Contacts\r\n","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\n\r\nconst Filter = ({ value, onChange }) => {\r\n  return (\r\n    <label>\r\n      Find\r\n      <input\r\n        value={value}\r\n        type=\"text\"\r\n        onChange={onChange}\r\n        name=\"filter\"\r\n      ></input>\r\n    </label>\r\n  )\r\n}\r\n\r\nFilter.propTypes = {\r\n  value: PropTypes.string,\r\n  onChange: PropTypes.func,\r\n};\r\n\r\nexport default Filter\r\n","import React, { Component } from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport { nanoid } from 'nanoid'\r\n\r\n class Form extends Component {\r\n  state = {\r\n    name: \"\",\r\n    number: \"\",\r\n    id: \"\",\r\n   };\r\n   \r\n   reset = () => {\r\n    this.setState({\r\n      name: \"\",\r\n      number: \"\",\r\n    });\r\n  };\r\n   \r\n   handleChange = (e) => {\r\n    const { name, value } = e.target;\r\n    this.setState({ [name]: value });\r\n   };\r\n   \r\n   \r\n   onFormSubmit = e => {\r\n     e.preventDefault();\r\n      const newContact = {\r\n      name: this.state.name,\r\n      number: this.state.number,\r\n      id: nanoid(),\r\n     };\r\n     if (this.props.isNameExist(this.state.name)) {\r\n      return alert(`${this.state.name} is already in contacts`);\r\n    }\r\n    this.props.onSubmit({ ...newContact });\r\n    this.reset();\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <form onSubmit={this.onFormSubmit}>\r\n         <label>\r\n          Name\r\n          <input\r\n            value={this.state.name}\r\n            onChange={this.handleChange}\r\n            type=\"text\"\r\n            name=\"name\"\r\n            pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n            title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\r\n            required\r\n          />\r\n        </label>\r\n        <label>\r\n          Number\r\n          <input\r\n            value={this.state.number}\r\n            onChange={this.handleChange}\r\n            type=\"tel\"\r\n            name=\"number\"\r\n            pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\r\n            title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\r\n            required\r\n          />\r\n        </label>\r\n         <button type=\"submit\">Add contact</button>\r\n      </form>\r\n    )\r\n  }\r\n}\r\nForm.propTypes = {\r\n  state: PropTypes.arrayOf(PropTypes.object),\r\n  onSubmit: PropTypes.func.isRequired,\r\n};\r\nexport default Form","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\n\r\nconst Section = ({ title, children }) => {\r\n  return (\r\n    <>\r\n      <h3>{title}</h3>\r\n      {children}\r\n    </>\r\n  )\r\n}\r\n\r\nSection.propTypes = {\r\n  title: PropTypes.string,\r\n  children: PropTypes.node,\r\n}\r\n\r\nexport default Section\r\n","import { Component } from \"react\";\r\nimport Contacts from \"./Contacts/Contacts\";\r\nimport Filter from \"./Filter/Filter\";\r\nimport Form from \"./Form/Form\";\r\nimport Section from \"./Section/Section\";\r\n\r\nclass App extends Component {\r\n  state = {\r\n    contacts: [],\r\n    filter: \"\",\r\n  };\r\n  formHandler = (data) => {\r\n    this.setState((prev) => ({\r\n      contacts: [...prev.contacts, data],\r\n    }));\r\n  };\r\n\r\n  onChangeFilter = (e) => {\r\n    const { name, value } = e.currentTarget;\r\n    this.setState({ [name]: value });\r\n  };\r\n\r\n  isNameExist = (formState) => {\r\n    const some = this.state.contacts.some(\r\n      (contact) => contact.name.toLowerCase() === formState.toLowerCase()\r\n    );\r\n    return some;\r\n  };\r\n\r\n  onDelete = (e) => {\r\n    e.preventDefault();\r\n    const newFilter = this.state.contacts.filter(\r\n      (contact) => e.target.name !== contact.id\r\n    );\r\n    this.setState({\r\n      contacts: [...newFilter],\r\n    });\r\n  };\r\n\r\n  render() {\r\n    const filter = this.state.contacts.filter((contact) =>\r\n      contact.name.toLowerCase().includes(this.state.filter.toLowerCase())\r\n    );\r\n    return (\r\n      <>\r\n        <Section title=\"Phonebook\">\r\n          <Form\r\n            isNameExist={this.isNameExist}\r\n            state={this.state.contacts}\r\n            onSubmit={this.formHandler}\r\n          />\r\n        </Section>\r\n        <Section title={\"Contacts\"}>\r\n          <Filter value={this.state.filter} onChange={this.onChangeFilter} />\r\n          {this.state.contacts.length !== 0 && (\r\n            <Contacts onDelete={this.onDelete} options={filter} />\r\n          )}\r\n        </Section>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.css\";\r\nimport App from \"./Components/App\";\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById(\"root\")\r\n);\r\n"],"sourceRoot":""}